E2E Testing

중요: 과거에 end-to-end 테스트는 Angular Senerio Runner로 불리는 툴에 의존하였습니다. 
	그 툴은 현재 유지보수모드입니다.

 어플리케이션은 크기와 복잡함이 자라기 때문에 이것은 새로운 기능이나 버그 수정, 회귀 통지의 
 정확한 신뢰를 위한 수동 테스트에 의존하게됨은 깨닫게 된다. 단위 테스트는 버그를 잡기 위한 첫
 번째 라인이지만 때때로 단위테스트에 잡힐수 없는 컴포넌트 사이의 확장에 의한 이슈가 때때로 발생
 한다.
 우리는 Protector를 짓고, end to end test runner를 사용자 행동을 시뮬레이션 하여,
 그것이 우리를 Angular 어플리케이션의 건상을 신뢰하게 도와준다.
 
 Using Protractor
 
 Protractor는 Node.js 프로그램이고, node에서 동작하고 자바스크립트로 자성되어진 end-to-end
 테스트 이다. Protractor는 브라우저 컨트롤은 WebDriber를 사용하고 사용자 행동을 시뮬레이션한다.
 Protractor의 많은 정보는 getting started또는 api 문서를 확인해라
  - http://angular.github.io/protractor/#/getting-started
  - http://www.protractortest.org/#/api
 Protractor는 테스트 구문은 Jasmin을 사용한다. 단위테스트하는 동안 어플리케이션의 요구사항을
 상세화 하고 그것은 테스트 파일 하나 또는 그 이상으로 구성된다. 이것은 실행과 기대로 하나의 블럭을
 형성한다. 실행은 Protractor가 페이지 이동 또는 버튼 클릭과 같은 무언가를 하도록 합니다. 기대는
 Protractor가 어플레세이션의 상태에 대해 주장하는 것이 값이나 정확한 URL 값과 같은지를 말해줍니다.
 
 만일 어떤 기대가 it블럭이 실패했으면 그 runner는 it을 failed로 마킹하고 다음 블럭을 실행합니다.
 테스트 파일은 beforeEach, afterEach 블럭을 갖고 있고 그것은 it 블럭의 실행 전 또는 후에 실행하고
 블럭이 패스 또는 실패에 대해 고려되어 집니다.
 
 senario----- befor Each
                  command
                  commnad
              afterEach
                  command
                  commnad
              it
                  command
                  command 
                  expectation
                  expectation
              it
 
 전체 요소에 추가함으로써, 테스트는 it 블럭에서 중복되는 코드를 피하기 위해 지원 function을 확인 할 수 있다.
 아래에 simple test 가 있습니다.
 
 describe('TODO list', function(){
 			if('should filter result', function(){
 				//Find the element with ng-model="user" and type "jacksparrow" into it
 				element(by.model('user')).sendKeys('jascparrow');
 				
 				//Find the first (and only) button on the page and click it
 				element(by.css(':button')).click();
 				
 				//Verify that there are 10 tasks
 				expect(element.all(by.repeater('task in task')).count()).toEqual(10);
 				
 				//Enter 'groceries' into the element with ng-model="filterText"
 				element(by.model('filterText')).sendKeys('groceries');
 				
 				//Verify that now there is only one item in the task list
 				expect(element.all(by.repeater('task in tasks')).count()).toEqual(1);
 			});
 		});
 		
 위 테스트는 ToDo list의 요건을 묘사하여, 특별하게 아이템의 리스트 검출을 할수 있다.
 
Example
 angular-seed 프로젝트에는 좀더 많은 예제를 갖고 있다. 그리고 Angular 문서에는 예제들이
 들어있는 것을 확인 할 수있다.(예를 들어 $http에는 protractor.js tag아래에 end-to-end 예제가
 존재한다.
 
Caveats
 Protractor는 angular.bootstrap을 수동으로 사용한 bootstrap에서의 app과 함께있는 아웃
 박스에서는 동작하지 않습니다. 당신을 ng-app directive를 사용해야 합니다.
 
 
	